// Generated by view binder compiler. Do not edit!
package proyectos.moviles.carlos_cordova_ec3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import proyectos.moviles.carlos_cordova_ec3.R;

public final class ItemInfoBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CheckBox chkFavorito;

  @NonNull
  public final Guideline guidelineMidle;

  @NonNull
  public final ImageView imgInfo;

  @NonNull
  public final TextView txtInfoName;

  @NonNull
  public final TextView txtRaza;

  private ItemInfoBinding(@NonNull CardView rootView, @NonNull CheckBox chkFavorito,
      @NonNull Guideline guidelineMidle, @NonNull ImageView imgInfo, @NonNull TextView txtInfoName,
      @NonNull TextView txtRaza) {
    this.rootView = rootView;
    this.chkFavorito = chkFavorito;
    this.guidelineMidle = guidelineMidle;
    this.imgInfo = imgInfo;
    this.txtInfoName = txtInfoName;
    this.txtRaza = txtRaza;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chk_favorito;
      CheckBox chkFavorito = ViewBindings.findChildViewById(rootView, id);
      if (chkFavorito == null) {
        break missingId;
      }

      id = R.id.guideline_midle;
      Guideline guidelineMidle = ViewBindings.findChildViewById(rootView, id);
      if (guidelineMidle == null) {
        break missingId;
      }

      id = R.id.img_info;
      ImageView imgInfo = ViewBindings.findChildViewById(rootView, id);
      if (imgInfo == null) {
        break missingId;
      }

      id = R.id.txt_info_name;
      TextView txtInfoName = ViewBindings.findChildViewById(rootView, id);
      if (txtInfoName == null) {
        break missingId;
      }

      id = R.id.txt_raza;
      TextView txtRaza = ViewBindings.findChildViewById(rootView, id);
      if (txtRaza == null) {
        break missingId;
      }

      return new ItemInfoBinding((CardView) rootView, chkFavorito, guidelineMidle, imgInfo,
          txtInfoName, txtRaza);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
